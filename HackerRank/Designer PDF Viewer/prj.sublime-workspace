{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"e",
				"empty"
			],
			[
				"cou",
				"cout"
			],
			[
				"p",
				"push_back"
			],
			[
				"vec",
				"vecUtilised"
			],
			[
				"v",
				"vec"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n\nint main()\n{\n    ofstream fout(getenv(\"OUTPUT_PATH\"));\n\n    string h_temp_temp;\n    getline(cin, h_temp_temp);\n\n    vector<string> h_temp = split_string(h_temp_temp);\n\n    vector<int> h(26);\n\n    for (int i = 0; i < 26; i++) {\n        int h_item = stoi(h_temp[i]);\n\n        h[i] = h_item;\n    }\n\n    string word;\n    getline(cin, word);\n\n    int result = designerPdfViewer(h, word);\n\n    fout << result << \"\\n\";\n\n    fout.close();\n\n    return 0;\n}\n\nvector<string> split_string(string input_string) {\n    string::iterator new_end = unique(input_string.begin(), input_string.end(), [] (const char &x, const char &y) {\n        return x == y and x == ' ';\n    });\n\n    input_string.erase(new_end, input_string.end());\n\n    while (input_string[input_string.length() - 1] == ' ') {\n        input_string.pop_back();\n    }\n\n    vector<string> splits;\n    char delimiter = ' ';\n\n    size_t i = 0;\n    size_t pos = input_string.find(delimiter);\n\n    while (pos != string::npos) {\n        splits.push_back(input_string.substr(i, pos - i));\n\n        i = pos + 1;\n        pos = input_string.find(delimiter, i);\n    }\n\n    splits.push_back(input_string.substr(i, min(pos, input_string.length()) - i + 1));\n\n    return splits;\n}\n",
			"file": "source.cpp",
			"file_size": 1754,
			"file_write_time": 132346271160850624,
			"settings":
			{
				"buffer_size": 1263,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "input.txt",
			"settings":
			{
				"buffer_size": 28,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "error.txt",
			"settings":
			{
				"buffer_size": 110,
				"line_ending": "Unix"
			}
		},
		{
			"file": "output.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/C++/C++ Single File.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/D/Personal/Study/Workplace/mycode/other/template_project/template_prj.sublime-project"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1263,
						"regions":
						{
						},
						"selection":
						[
							[
								48,
								48
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "input.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 28,
						"regions":
						{
						},
						"selection":
						[
							[
								28,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "error.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.8,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "output.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				3
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			],
			[
				1,
				2,
				2,
				3
			]
		],
		"cols":
		[
			0.0,
			0.640104166667,
			1.0
		],
		"rows":
		[
			0.0,
			0.333333333333,
			0.666666666667,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 179.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "prj.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				3
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			],
			[
				1,
				2,
				2,
				3
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
