// The API isBadVersion is defined for you.
// bool isBadVersion(int version);


class Solution {    
public:
    int firstBadVersion(int n) {
        
       if(true == isBadVersion(1))
            return 1;
        
        int l = 2;
        int r = n;
        int index = 0;
        while(l <= r)
        {            
            int mid = (l+r)/2;
            if(true == isBadVersion(mid))
            {
                if(false == isBadVersion(mid-1))
                {
                    index = mid;
                    break;
                }
                else
                {
                    r = mid-1;
                }
            }
            else
            {
                l = mid + 1;
            }
            
        }
        
        return index;        
    }
};

/* Best Solution
public int firstBadVersion(int n) {
    int left = 1;
    int right = n;
    while (left < right) {
        int mid = left + (right - left) / 2;
        if (isBadVersion(mid)) {
            right = mid;
        } else {
            left = mid + 1;
        }
    }
    return left;
}

*/